{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nextGraphemeClusterBreak from '@stdlib/string-next-grapheme-cluster-break';\n\n\n// MAIN //\n\n/**\n* Invokes a function for each grapheme cluster (i.e., user-perceived character) in a string.\n*\n* @param {string} str - input string\n* @param {Function} clbk - function to invoke\n* @param {*} [thisArg] - execution context\n* @returns {string} input string\n*\n* @example\n* function log( value, index ) {\n*     console.log( '%d: %s', index, value );\n* }\n*\n* forEach( 'Hello', log );\n*/\nfunction forEach( str, clbk, thisArg ) {\n\tvar len;\n\tvar idx;\n\tvar brk;\n\n\tlen = str.length;\n\tidx = 0;\n\twhile ( idx < len ) {\n\t\tbrk = nextGraphemeClusterBreak( str, idx );\n\t\tif ( brk === -1 ) {\n\t\t\tbrk = len;\n\t\t}\n\t\tclbk.call( thisArg, str.substring( idx, brk ), idx, str );\n\t\tidx = brk;\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default forEach;\n"],"names":["forEach","str","clbk","thisArg","len","idx","brk","length","nextGraphemeClusterBreak","call","substring"],"mappings":";;6GA0CA,SAASA,EAASC,EAAKC,EAAMC,GAC5B,IAAIC,EACAC,EACAC,EAIJ,IAFAF,EAAMH,EAAIM,OACVF,EAAM,EACEA,EAAMD,IAEC,KADdE,EAAME,EAA0BP,EAAKI,MAEpCC,EAAMF,GAEPF,EAAKO,KAAMN,EAASF,EAAIS,UAAWL,EAAKC,GAAOD,EAAKJ,GACpDI,EAAMC,EAEP,OAAOL,CACR"}